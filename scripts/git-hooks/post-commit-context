#!/bin/bash
# Git post-commit hook for context file monitoring
# This hook runs after each commit to check for context file changes

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Running context file monitoring...${NC}"

# Get the repository root
REPO_ROOT=$(git rev-parse --show-toplevel)
cd "$REPO_ROOT"

# Check if context files were modified in the last commit
CONTEXT_FILES_MODIFIED=false

# Check if infrastructure.md was modified
if git diff --name-only HEAD~1 HEAD | grep -q "ai/context/infrastructure.md"; then
    CONTEXT_FILES_MODIFIED=true
    echo -e "${YELLOW}üìù Infrastructure context file was modified${NC}"
fi

# Check if tech-stack.md was modified
if git diff --name-only HEAD~1 HEAD | grep -q "ai/context/tech-stack.md"; then
    CONTEXT_FILES_MODIFIED=true
    echo -e "${YELLOW}üìù Tech stack context file was modified${NC}"
fi

if [ "$CONTEXT_FILES_MODIFIED" = true ]; then
    echo -e "${BLUE}Running context monitor...${NC}"
    
    # Run the context monitor
    if [ -f "scripts/context-monitor.py" ]; then
        python3 scripts/context-monitor.py
        echo -e "${GREEN}‚úÖ Context monitoring complete${NC}"
    else
        echo -e "${RED}‚ùå Context monitor script not found${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ No context files modified in this commit${NC}"
fi
